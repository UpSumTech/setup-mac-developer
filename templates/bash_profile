########## Not generated by bash-it #############

[ -f ~/.bashrc ] && . ~/.bashrc

####################################### GLOBAL VARS #######################################
export VISUAL=vim
export EDITOR=$VISUAL
export GIT_EDITOR=$EDITOR
export HISTSIZE=50000
export HISTFILESIZE=$HISTSIZE
shopt -s histappend

####################################### HOMEBREW #######################################
eval "$(/opt/homebrew/bin/brew shellenv)"



############################# UPDATE PATH AND LOAD PROGRAMMING LANGUAGE ENVS ###############################
# Init env specific prog langs and also load it in the paths properly
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$(brew --prefix)/opt/findutils/libexec/gnubin:$(brew --prefix)/opt/gnu-tar/libexec/gnubin:$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$(brew --prefix)/opt/gnu-getopt/libexec/gnubin:$(brew --prefix)/opt/sqlite/bin:$(brew --prefix)/opt/curl/bin:$(brew --prefix)/opt/gnu-indent/libexec/gnubin:$(brew --prefix)/opt/ruby/bin:$(brew --prefix)/bin:$(brew --prefix)/sbin:$(brew --prefix)/opt:$(brew --prefix)/share:$PATH"
export PATH="$(brew --prefix)/opt/postgresql@10/bin:$PATH"
export PATH="$(brew --prefix)/opt/mysql@5.7/bin:$PATH"
export PATH="$(brew --prefix)/opt/tcl-tk/bin:$PATH"
export PATH="$HOME/bin:$PATH"

export MANPATH="$(brew --prefix)/opt/coreutils/libexec/gnuman:$(brew --prefix)/opt/findutils/libexec/gnuman:$(brew --prefix)/opt/gnu-tar/libexec/gnuman:$(brew --prefix)/opt/gnu-sed/libexec/gnuman:$MANPATH"

if [[ -f $(brew --prefix)/opt/autoenv/activate.sh ]]; then
  . $(brew --prefix)/opt/autoenv/activate.sh
fi

if command -v pyenv-virtualenv-init > /dev/null; then
  export PATH="$HOME/.pyenv/shims:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

mkdir -p $HOME/.nvm
export NVM_DIR="$HOME/.nvm"
. "$(brew --prefix)/opt/nvm/nvm.sh"

eval "$(rbenv init -)"

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

eval "$(goenv init -)"
export PATH="$HOME/.goenv/shims:$PATH"

export PATH="$HOME/.kopsenv/bin:$PATH"

export PATH="$HOME/.helmenv/bin:$PATH"

export PGDATA="$HOME/var/data/postgres"

if [[ -d $(brew --prefix)/opt/groovysdk/libexec ]]; then
  export GROOVY_HOME=$(brew --prefix)/opt/groovysdk/libexec
fi

if [[ -d $HOME/.tgenv ]]; then
  export PATH="$HOME/.tgenv/bin:$PATH"
fi

if [[ -d $HOME/.cargo ]]; then
  . $HOME/.cargo/env
fi

#################################### COMPLETIONS ###################################
# Load bash completions for homebrew packages
if command -v pipenv >/dev/null 2>&1; then
  eval "$(_PIPENV_COMPLETE=bash_source pipenv)"
fi
. "$(brew --prefix)/etc/profile.d/bash_completion.sh"
for completion_file in $(brew --prefix)/etc/bash_completion.d/*; do [[ -f "$completion_file" ]] && . "$completion_file"; done
for completion_file in $(brew --prefix)/opt/*/etc/bash_completion.d/*; do [[ -f "$completion_file" ]] && . "$completion_file"; done

# kubectl completion functionality
if command -v kubectl >/dev/null 2>&1 && test ! -f "$HOME/.kubectl-completion"; then
  kubectl completion bash > $HOME/.kubectl-completion
fi
if [[ -f "$HOME/.kubectl-completion" ]]; then
  . "$HOME/.kubectl-completion"
  type -t __ltrim_colon_completions | grep -i function >/dev/null 2>&1 || __ltrim_colon_completions() { :; }
fi

# ark completion functionality
if command -v ark >/dev/null 2>&1 && test ! -f "$HOME/.ark-completion"; then
  ark completion bash > $HOME/.ark-completion
fi
if [[ -f "$HOME/.ark-completion" ]]; then
  . "$HOME/.ark-completion"
fi

# kops completion functionality
if command -v kops >/dev/null 2>&1 && test ! -f "$HOME/.kops-completion"; then
  kops completion bash > $HOME/.kops-completion
fi
if [[ -f "$HOME/.kops-completion" ]]; then
  . "$HOME/.kops-completion"
fi



####################################### ALIASES #######################################
alias todo='todo.sh'



#################################### LOAD UTILS ###################################
# source bash_utils
if [[ -d "$HOME/.secrets" ]]; then
  for file in $(find "$HOME/.secrets" -type f -name "*.sh"); do
    . "$file"
  done
fi
if [[ -f "$HOME/.activate_profile.sh" ]]; then
  . "$HOME/.activate_profile.sh"
fi
if [[ -f ~/.bash_utils.sh ]]; then
  . ~/.bash_utils.sh
fi
echo "Shell ready"
