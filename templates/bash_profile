#!/usr/bin/env bash

# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac


########## Not generated by bash-it #############

[ -f ~/.bashrc ] && . ~/.bashrc



####################################### GLOBAL VARS #######################################
export VISUAL=vim
export EDITOR=$VISUAL
export GIT_EDITOR=$EDITOR
export HISTSIZE=50000
export HISTFILESIZE=$HISTSIZE
shopt -s histappend
export BASH_IT="$HOME/.bash_it"
export BASH_IT_THEME='powerline'
unset MAILCHECK
export IRC_CLIENT='irssi'
export SCM_CHECK=true
export THEME_SHOW_CLOCK_CHAR=false
export POWERLINE_PROMPT="user_info scm aws_profile k8s_context k8s_namespace cwd"
export POWERLINE_COMPACT=1
export DEFAULT_TERRAFORM_VERSION="1.2.2"
export DEFAULT_TERRAGRUNT_VERSION="0.36.0"
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"
export KHELM_TRUST_ANY_REPO=true
export XDG_CONFIG_HOME="$HOME/.config"



####################################### HOMEBREW #######################################
eval "$(/opt/homebrew/bin/brew shellenv)"



####################################### LOAD BASH_IT #######################################
if [[ -d "$BASH_IT" ]]; then
  mkdir -p $HOME/.local/state/bash_it/dirs
  source "$BASH_IT"/bash_it.sh
fi



############################# UPDATE PATH AND LOAD PROGRAMMING LANGUAGE ENVS ###############################
# Init env specific prog langs and also load it in the paths properly
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$(brew --prefix)/opt/findutils/libexec/gnubin:$(brew --prefix)/opt/gnu-tar/libexec/gnubin:$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$(brew --prefix)/opt/gnu-getopt/libexec/gnubin:$(brew --prefix)/opt/sqlite/bin:$(brew --prefix)/opt/curl/bin:$(brew --prefix)/opt/gnu-indent/libexec/gnubin:$(brew --prefix)/opt/ruby/bin:$(brew --prefix)/bin:$(brew --prefix)/sbin:$(brew --prefix)/opt:$(brew --prefix)/share:$PATH"
export PATH="$(brew --prefix)/opt/postgresql@10/bin:$PATH"
export PATH="$(brew --prefix)/opt/mysql@5.7/bin:$PATH"
export PATH="$(brew --prefix)/opt/tcl-tk/bin:$PATH"

export MANPATH="$(brew --prefix)/opt/coreutils/libexec/gnuman:$(brew --prefix)/opt/findutils/libexec/gnuman:$(brew --prefix)/opt/gnu-tar/libexec/gnuman:$(brew --prefix)/opt/gnu-sed/libexec/gnuman:$MANPATH"

if [[ -f $(brew --prefix)/opt/autoenv/activate.sh ]]; then
  . $(brew --prefix)/opt/autoenv/activate.sh
fi

if command -v pyenv >/dev/null 2>&1; then
  export PATH="$HOME/.pyenv/shims:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

if [[ ! -d "$HOME/.nvm" ]]; then
  mkdir $HOME/.nvm
fi
export NVM_DIR="$HOME/.nvm"
. "$(brew --prefix)/opt/nvm/nvm.sh"

if command -v rbenv >/dev/null 2>&1; then
  eval "$(rbenv init -)"
fi

if command -v jenv >/dev/null 2>&1; then
  export PATH="$HOME/.jenv/bin:$PATH"
  eval "$(jenv init -)"
fi

if command -v goenv >/dev/null 2>&1; then
  eval "$(goenv init -)"
  export PATH="$HOME/.goenv/shims:$PATH"
fi

if command -v tfenv >/dev/null 2>&1; then
  export PATH="$(brew --prefix tfenv)/bin:$PATH"
  tfenv use "$DEFAULT_TERRAFORM_VERSION"
fi

if command -v tgenv >/dev/null 2>&1; then
  export PATH="$(brew --prefix tgenv)/bin:$PATH"
  tgenv use "$DEFAULT_TERRAGRUNT_VERSION"
fi

if [[ -d "$HOME/var/data/postgres" ]]; then
  export PGDATA="$HOME/var/data/postgres"
fi

if [[ -d $(brew --prefix)/opt/groovysdk/libexec ]]; then
  export GROOVY_HOME=$(brew --prefix)/opt/groovysdk/libexec
fi

if [[ -d $HOME/.cargo ]]; then
  . $HOME/.cargo/env
fi

if [[ -d $HOME/.krew ]]; then
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

export PATH="$HOME/bin:$PATH"

if command -v m1-terraform-provider-helper >/dev/null 2>&1; then
  m1-terraform-provider-helper activate
fi



#################################### COMPLETIONS ###################################
if command -v pipenv >/dev/null 2>&1; then
  eval "$(_PIPENV_COMPLETE=bash_source pipenv)"
fi

. "$(brew --prefix)/etc/profile.d/bash_completion.sh"

# Load bash completions for homebrew packages
for completion_file in $(brew --prefix)/etc/bash_completion.d/*; do
  if [[ -f "$completion_file" ]]; then
    . "$completion_file"
  fi
done

# Load bash completions for homebrew packages
for completion_file in $(brew --prefix)/opt/*/etc/bash_completion.d/*; do
  if [[ -f "$completion_file" ]]; then
    . "$completion_file"
  fi
done

# kubectl completion functionality
if command -v kubectl >/dev/null 2>&1 && test ! -f "$HOME/.kubectl-completion"; then
  kubectl completion bash > $HOME/.kubectl-completion
fi
if [[ -f "$HOME/.kubectl-completion" ]]; then
  . "$HOME/.kubectl-completion"
  type -t __ltrim_colon_completions | grep -i function >/dev/null 2>&1 || __ltrim_colon_completions() { :; }
fi

# ark completion functionality
if command -v ark >/dev/null 2>&1 && test ! -f "$HOME/.ark-completion"; then
  ark completion bash > $HOME/.ark-completion
fi
if [[ -f "$HOME/.ark-completion" ]]; then
  . "$HOME/.ark-completion"
fi




####################################### ALIASES #######################################



#################################### LOAD UTILS ###################################
# source bash_utils
if [[ -d "$HOME/.secrets" ]]; then
  for file in $(find "$HOME/.secrets" -type f -name "*.sh"); do
    . "$file"
  done
fi
if [[ -f "$HOME/.activate_profile.sh" ]]; then
  . "$HOME/.activate_profile.sh"
fi
if [[ -f ~/.bash_utils.sh ]]; then
  . "$HOME/.bash_utils.sh"
fi

